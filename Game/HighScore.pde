class HighScore{
  int highScore;
  int score;
  PImage[] numSprites;
  
 public HighScore(int highScore){
   this.highScore = highScore;
   score = 0;
   numSprites = new PImage[12];
    for (int i = 0; i <11; i++) {
      numSprites[i] = loadImage("Sprites/" + i + ".png");
      numSprites[i].resize(20, 20);
    }

  }
 
 
 
 void addScore(int s){
  score += s; 
 }
 
 void pushScore(){
  if(score > highScore){
   highScore = score;
   String[] scoreString = new String[2];
   scoreString[0] = "//DO NOT EDIT THIS FILE";
   scoreString[1] = "" + highScore;
   saveStrings("data/score.txt", scoreString);
  }
   
 }
 
 void resetScore(){
   score = 0;  
 }
 
 
 void drawScoreHUD(){
   
   int tmpScore = score;
   PVector numOffset = new PVector(width/2 + 100, 20);
   
   while(tmpScore >= 1){
      if(tmpScore % 10 > 0){
        image(numSprites[tmpScore % 10], numOffset.x, numOffset.y);
      }
      else{
       image(numSprites[0], numOffset.x, numOffset.y); 
      }
      
      //2nd digit from the right
      tmpScore = (int)Math.floor(tmpScore / 10.0);
      numOffset.x -= 20;
   }
 }
  
}